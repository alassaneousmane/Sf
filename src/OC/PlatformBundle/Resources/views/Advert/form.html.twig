{# src/OC/PlatformBundle/Resources/views/Advert/form.html.twig #}

{# Cette vue n'hérite de personne, elle sera incluse par d'autres vues qui,
   elles, hériteront probablement du layout. Je dis « probablement » car,
   ici pour cette vue, on n'en sait rien et c'est une info qui ne nous concerne pas. #}

<h3>Formulaire d'annonce</h3>

{# On laisse vide la vue pour l'instant, on la comblera plus tard
   lorsqu'on saura afficher un formulaire. #}
<div class="well">
{{ form_start(form, {'attr': {'class' : 'form-horizontal', 'id': 'form-submit'}} ) }}

{# Les erreurs générales du formulaire #}
{{ form_errors(form) }}

<div class="form-group">
{% if form.date is defined %}
	{{ form_label(form.date, "Date de publication", {'label_attr': {'class': 'col-sm-2'}} ) }}
	<div class="col-sm-10">
		{{ form_widget(form.date) }}
	</div>
{% endif %}
</div>

{# C'est le form_widget(form.date) qui affiche le champs même input, select, ..
   et form_row(form.save) affiche le label, le champs et les erreurs 
#}

{# Génération manuelle et éclatéé #}
<div class="form-group">
	{# Génération du label. #}
	{{ form_label(form.title, "Titre de l'annonce", {'label_attr' : {'class' : 'col-sm-2 control-label'}} ) }}

	{# Affichage des erreurs pour ce champs précis #}
	{{ form_errors(form.title) }}
	<div class="col-sm-10">
		{# Génération de l'input #}
		{{ form_widget(form.title, {'attr' : {'class' : 'form-control'}} )}}
	</div>
</div>

{# Idem pour un autre groupe #}
<div class="form-group">
	{{ form_label(form.content, "Contenu de l'annonce", {'label_attr': {'class': 'col-sm-2 control-label'}} )}}
	{{ form_errors(form.content)}}
	<div class="col-sm-10">
		{{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}
	</div>
</div>

{# Idem pour un autre groupe #}
<div class="form-group">
	{{ form_label(form.author, "Auteur de l'annonce ?", {'label_attr': {'class': 'col-sm-2 control-label'}} )}}
	{{ form_errors(form.author)}}
	<div class="col-sm-10">
		{{ form_widget(form.author, {'attr': {'class': 'form-control'}}) }}
	</div>
</div>

{# Pour le champ email #}
<div class="form-group">
	{{ form_label(form.email, "Email", {'label_attr': {'class': 'col-sm-2 control-label'}} ) }}
	{{ form_errors(form.email) }}
	<div class="col-sm-10">
		{{ form_widget(form.email,{'attr': {'class': 'form-control'}} ) }}
	</div>
</div>


{# Idem pour un autre groupe #}
<div class="form-group">
{% if form.published is defined %}
{{ form_label(form.published, "Publier cette annonce ?", {'label_attr': {'class': 'col-sm-2 control-label'}} )}}
	{{ form_errors(form.published)}}
	<div class="col-sm-10" style="margin-left: 50px">
		{{ form_row(form.published) }}
	</div>
{% endif %}	
</div>

{% if form.image is defined %}
<div class="form-group">
  {{ form_label(form.image.file, "Sélectionnez l'image associée", {'label_attr': {'class': 'col-sm-2 control-label'}})}}
  {{ form_errors(form.image.file) }}
  <div class="col-sm-10" style="margin-left: 50x">
    {{ form_widget(form.image.file) }}
  </div>
</div>
{% endif %}



<div class="form-group" style="margin-left: 95px; width: 70%">

	{{ form_row(form.categories) }} {# Affiche le label, les erreurs et le champ #}

</div>

 <a href="#" id="add_category" class="btn btn-default">Ajouter une catégorie</a>

{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
  $(document).ready(function() {
    /**
       $('#form-submit').on('submit', function(event)
      {
        event.preventDefault();
        var url = "{{ path('oc_platform_add') }}";
        var query = $(this).serialize();
        $.ajax({
          type: 'POST',
          url: url,
          data:
           {
            query: query
            }
            ,
          beforeSend: function() {

          },
          success: function(data) {

          },
          error: function() {

          }
        });    
      });
      **/
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#oc_plat_advert_categories');

    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $('#add_category').click(function(e) {
   
      addCategory($container);

      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addCategory($container);
    } else {
      // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire CategoryType
    function addCategory($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var template = $container.attr('data-prototype')
        .replace(/__name__label__/g, 'Catégorie n°' + (index+1))
        .replace(/__name__/g,        index)
      ;

      // On crée un objet jquery qui contient ce template
      var $prototype = $(template);

      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);

      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
      // Création du lien
      var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

      // Ajout du lien
      $prototype.append($deleteLink);

      // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
      $deleteLink.click(function(e) {
        $prototype.remove();

        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }
  });
</script>

<div class="row">
	<div class="col-sm-4">
	
    </div>
    <div class="col-sm-8">
    	{# Pour le bouton, pas de label ni d'erreur #}
		{{ form_widget(form.save, {'attr': {'class': 'btn btn-lg btn-primary'}})}}
    </div>
</div>


{# Génération automatique des champs pas encore écrits #}
{{ form_rest(form) }}

{# Fermeture de la balise <form> du formulaire HTML #}
{{ form_end(form) }}

</div>